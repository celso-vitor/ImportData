//using System;
//using System.Diagnostics;
//using System.IO;

//namespace SequenceAssemblerLogic;
//public class SequenceAligner
//{
//    private const string ClustaloName = "clustalo.exe";

//    private string GetTempFilePath(string fileName) => Path.Combine(Path.GetTempPath(), fileName);

//    private void EnsureClustaloResources()
//    {
//        if (!File.Exists(GetTempFilePath(ClustaloName)))
//        {
//            File.WriteAllBytes(GetTempFilePath(ClustaloName), Properties.Resources.clustalo);
//            File.WriteAllBytes(GetTempFilePath("libgcc_s_sjlj-1.dll"), Properties.Resources.libgcc_s_sjlj_1);
//            File.WriteAllBytes(GetTempFilePath("libgomp-1.dll"), Properties.Resources.libgomp_1);
//            File.WriteAllBytes(GetTempFilePath("libstdc++-6.dll"), Properties.Resources.libstdc___6);
//            File.WriteAllBytes(GetTempFilePath("pthreadGC2-w64.dll"), Properties.Resources.pthreadGC2_w64);
//        }
//    }

//    public List<FASTA> AlignSequences(List<FASTA> sequences)
//    {
//        string input = Path.Combine(Path.GetTempPath(), "tempFasta.fasta");

//        using (StreamWriter writer = new StreamWriter(input))
//        {
//            foreach (var sequence in sequences)
//            {
//                writer.WriteLine($">{sequence.ID} {sequence.Description}");
//                writer.WriteLine(sequence.Sequence);
//            }
//        }

//        EnsureClustaloResources();

//        string output = "output.txt";

//        ProcessStartInfo startInfo = new ProcessStartInfo
//        {
//            FileName = GetTempFilePath(ClustaloName),
//            Arguments = $"-i \"{input}\" -o \"{output}\" --force",
//            RedirectStandardOutput = true,
//            RedirectStandardError = true,
//            UseShellExecute = false,
//            CreateNoWindow = true,
//        };

//        try
//        {
//            using (Process process = new Process { StartInfo = startInfo })
//            {
//                process.Start();

//                string standardOutput = process.StandardOutput.ReadToEnd();
//                string standardError = process.StandardError.ReadToEnd();

//                process.WaitForExit();

//                if (string.IsNullOrEmpty(standardOutput) && string.IsNullOrEmpty(standardError))
//                {
//                    Console.WriteLine("No standard output or error was generated by the process.");
//                }
//                else
//                {
//                    Console.WriteLine(standardOutput);
//                    if (!string.IsNullOrEmpty(standardError))
//                    {
//                        Console.Error.WriteLine(standardError);
//                    }
//                }
//            }
//        }
//        catch (Exception ex)
//        {
//            Console.WriteLine($"An exception occurred: {ex.Message}");
//        }

//        if (File.Exists(output))
//        {
//            List<FASTA> alignments = FastaParser.ParseFastaFile(output);
//            //File.Delete(output);
//            return alignments;
//        }
//        else
//        {
//            Console.WriteLine("Output file not found.");
//            return null;
//        }
//    }
//}

